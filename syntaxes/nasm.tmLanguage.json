{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "NASM Assembly",
    "patterns": [
        {
            "include": "#statements"
        }
    ],
    "firstLineMatch": "",
    "repository": {
        "statements": {
            "patterns": [
                {
                    "include": "#expressions"
                },
                {
                    "name": "keyword.control.x86",
                    "comment": "x86_64 instruction mnemonic",
                    "match": "\\b(?i)(aaa|aad|aam|aas|adc|adcx|add|addpd|addps|addsd|addss|addsubpd|addsubps|adox|aesdec|aesdec128kl|aesdec256kl|aesdeclast|aesdecwide128kl|aesdecwide256kl|aesenc|aesenc128kl|aesenc256kl|aesenclast|aesencwide128kl|aesencwide256kl|aesimc|aeskeygenassist|and|andn|andnpd|andnps|andpd|andps|arpl|bextr|blendpd|blendps|blendvpd|blendvps|blsi|blsmsk|blsr|bndcl|bndcn|bndcu|bndldx|bndmk|bndmov|bndstx|bound|bsf|bsr|bswap|bt|btc|btr|bts|bzhi|call|cbw|cdq|cdqe|clac|clc|cld|cldemote|clflush|clflushopt|cli|clrssbsy|clts|clui|clwb|cmc|cmova|cmovae|cmovb|cmovbe|cmovc|cmove|cmovg|cmovge|cmovl|cmovle|cmovna|cmovnae|cmovnb|cmovnbe|cmovnc|cmovne|cmovng|cmovnge|cmovnl|cmovnle|cmovno|cmovnp|cmovns|cmovnz|cmovo|cmovp|cmovpe|cmovpo|cmovs|cmovz|cmp|cmppd|cmpps|cmps|cmpsb|cmpsd|cmpsq|cmpss|cmpsw|cmpxchg|cmpxchg16b|cmpxchg8b|comisd|comiss|cpuid|cqo|crc32|cvtdq2pd|cvtdq2ps|cvtpd2dq|cvtpd2pi|cvtpd2ps|cvtpi2pd|cvtpi2ps|cvtps2dq|cvtps2pd|cvtps2pi|cvtsd2si|cvtsd2ss|cvtsi2sd|cvtsi2ss|cvtss2sd|cvtss2si|cvttpd2dq|cvttpd2pi|cvttps2dq|cvttps2pi|cvttsd2si|cvttss2si|cwd|cwde|daa|das|dec|div|divpd|divps|divsd|divss|dppd|dpps|emms|encodekey128|encodekey256|endbr32|endbr64|enqcmd|enqcmds|enter|extractps|f2xm1|fabs|fadd|faddp|fbld|fbstp|fchs|fclex|fcmovb|fcmove|fcmovbe|fcmovu|fcmovnb|fcmovne|fcmovnbe|fcmovnu|fcom|fcomi|fcomip|fcomp|fcompp|fcos|fdecstp|fdiv|fdivp|fdivr|fdivrp|ffree|fiadd|ficom|ficomp|fidiv|fidivr|fild|fimul|fincstp|finit|fist|fistp|fisttp|fisub|fisubr|fld|fld1|fldcw|fldenv|fldl2e|fldl2t|fldlg2|fldln2|fldpi|fldz|fmul|fmulp|fnclex|fninit|fnop|fnsave|fnstcw|fnstenv|fnstsw|fpatan|fprem|fprem1fptan|frndint|frstor|fsave|fscale|fsin|fsincos|fsqrt|fst|fstcw|fstenv|fstp|fstsw|fsub|fsubp|fsubr|fsubrp|ftst|fucom|fucomi|fucomip|fucomp|fucompp|fwait|fxam|fxch|fxrstor|fxsave|fxtract|fyl2x|fyl2xp1|gf2p8affineinvqb|gf2p8affineqb|gf2p8mulb|haddpd|haddps|hlt|hreset|hsubpd|hsubps|idiv|imul|in|inc|incsspd|incsspq|ins|insb|insd|insertps|insw|int|int1|int3|into|invd|invlpg|invpcid|iret|iretd|iretq|jmp|ja|jae|jb|jbe|jc|jcxz|jecxz|jrcxz|je|jg|jge|jl|jle|jna|jnae|jnb|jnbe|jnc|jne|jng|jnge|jnl|jnle|jno|jnp|jns|jnz|jo|jp|jpe|jpo|js|jz|kaddb|kaddd|kaddq|kaddw|kandb|kandd|kandnb|kandnd|kandnq|kandnw|kandq|kandw|kmovb|kmovd|kmovq|kmovw|knotb|knotd|knotq|knotw|korb|kord|korq|kortestb|kortestd|kortestq|kortestw|korw|kshiftlb|kshiftld|kshiftlq|kshiftlw|kshiftrb|kshiftrd|kshiftrq|kshiftrw|ktestb|ktestd|ktestq|ktestw|kunpckbw|kunpckdq|kunpckwd|kxnorb|kxnord|kxnorq|kxnorw|kxorb|kxord|kxorq|kxorw|lahf|lar|lddqu|ldmxcsr|lds|ldtilecfg|lea|leave|les|lfence|lfs|lgdt|lgs|lidt|lldt|lmsw|loadiwkey|lock|lods|lodsb|lodsd|lodsq|lodsw|loop|loope|loopne|lsl|lss|ltr|lzcnt|maskmovdqu|maskmovq|maxpd|maxps|maxsd|maxss|mfence|minpd|minps|minsd|minss|monitor|mov|movapd|movaps|movbe|movd|movddup|movdir64b|movdiri|movdq2q|movdqa|movdqu|movhlps|movhpd|movhps|movlhps|movlpd|movlps|movmskpd|movmskps|movntdq|movntdqa|movnti|movntpd|movntps|movntq|movq|movq2dq|movs|movsb|movsd|movshdup|movsldup|movsq|movss|movsw|movsx|movsxd|movupd|movups|movzx|mpsadbw|mul|mulpd|mulps|mulsd|mulss|mulx|mwait|neg|nop|not|or|orpd|orps|out|outs|outsb|outsd|outsw|pabsb|pabsd|pabsq|pabsw|packssdw|packsswb|packusdw|packuswb|paddb|paddd|paddq|paddsb|paddsw|paddusb|paddusw|paddw|palignr|pand|pandn|pause|pavgb|pavgw|pblendvb|pblendw|pclmulqdq|pcmpeqb|pcmpeqd|pcmpeqq|pcmpeqw|pcmpestri|pcmpestrm|pcmpgtb|pcmpgtd|pcmpgtq|pcmpgtw|pcmpistri|pcmpistrm|pconfig|pdep|pext|pextrb|pextrd|pextrq|pextrw|phaddd|phaddsw|phaddw|phminposuw|phsubd|phsubsw|phsubw|pinsrb|pinsrd|pinsrq|pinsrw|pmaddubsw|pmaddwd|pmaxsb|pmaxsd|pmaxsq|pmaxsw|pmaxub|pmaxud|pmaxuq|pmaxuw|pminsb|pminsd|pminsq|pminsw|pminub|pminud|pminuq|pminuw|pmovmskb|pmovsx|pmovzx|pmuldq|pmulhrsw|pmulhuw|pmulhw|pmulld|pmullq|pmullw|pmuludq|pop|popa|popad|popcnt|popf|popfd|popfq|por|prefetchw|prefetchh|psadbw|pshufb|pshufd|pshufhw|pshuflw|pshufw|psignb|psignd|psignw|pslld|pslldq|psllq|psllw|psrad|psraq|psraw|psrld|psrldq|psrlq|psrlw|psubb|psubd|psubq|psubsb|psubsw|psubusb|psubusw|psubw|ptest|ptwrite|punpckhbw|punpckhdq|punpckhqdq|punpckhwd|punpcklbw|punpckldq|punpcklqdq|punpcklwd|push|pusha|pushad|pushf|pushfd|pushfq|pxor|rcl|rcpps|rcpss|rcr|rdfsbase|rdgsbase|rdmsr|rdpid|rdpkru|rdpmc|rdrand|rdseed|rdsspd|rdsspq|rdtsc|rdtscp|rep|repe|repne|repnz|repz|ret|rol|ror|rorx|roundpd|roundps|roundsd|roundss|rsm|rsqrtps|rsqrtss|rstorssp|sahf|sal|sar|sarx|saveprevssp|sbb|scas|scasb|scasd|scasw|senduipi|serialize|setssbsy|seta|setae|setb|setbe|setc|sete|setg|setge|setl|setle|setna|setnae|setnb|setnbe|setnc|setne|setng|setnge|setnl|setnle|setno|setnp|setns|setnz|seto|setp|setpe|setpo|sets|setz|sfence|sgdt|sha1msg1|sha1msg2|sha1nexte|sha1rnds4|sha256msg1|sha256msg2|sha256rnds2|shl|shld|shlx|shr|shrd|shrx|shufpd|shufps|sidt|sldt|smsw|sqrtpd|sqrtps|sqrtsd|sqrtss|stac|stc|std|sti|stmxcsr|stos|stosb|stosd|stosq|stosw|str|sttilecfg|stui|sub|subpd|subps|subsd|subss|swapgs|syscall|sysenter|sysexit|sysret|tdpbf16ps|tdpbssd|tdpbsud|tdpbusd|tdpbuud|test|testui|tileloadd|tileloaddt1|tilerelease|tilestored|tilezero|tpause|tzcnt|ucomisd|ucomiss|ud|uiret|umonitor|umwait|unpckhpd|unpckhps|unpcklpd|unpcklps|vaddph|vaddsh|valignd|valignq|vblendmpd|vblendmps|vbroadcast|vcmpph|vcmpsh|vcomish|vcompresspd|vcompressps|vcompressw|vcvtdq2ph|vcvtne2ps2bf16|vcvtneps2bf16|vcvtpd2ph|vcvtpd2qq|vcvtpd2udq|vcvtpd2uqq|vcvtph2dq|vcvtph2pd|vcvtph2ps|vcvtph2psx|vcvtph2qq|vcvtph2udq|vcvtph2uqq|vcvtph2uw|vcvtph2w|vcvtps2ph|vcvtps2phx|vcvtps2qq|vcvtps2udq|vcvtps2uqq|vcvtqq2pd|vcvtqq2ph|vcvtqq2ps|vcvtsd2sh|vcvtsd2usi|vcvtsh2sd|vcvtsh2si|vcvtsh2ss|vcvtsh2usi|vcvtsi2sh|vcvtss2sh|vcvtss2usi|vcvttpd2qq|vcvttpd2udq|vcvttpd2uqq|vcvttph2dq|vcvttph2qq|vcvttph2udq|vcvttph2uqq|vcvttph2uw|vcvttph2w|vcvttps2qq|vcvttps2udq|vcvttps2uqq|vcvttsd2usi|vcvttsh2si|vcvttsh2usi|vcvttss2usi|vcvtudq2pd|vcvtudq2ph|vcvtudq2ps|vcvtuqq2pd|vcvtuqq2ph|vcvtuqq2ps|vcvtusi2sd|vcvtusi2sh|vcvtusi2ss|vcvtuw2ph|vcvtw2ph|vdbpsadbw|vdivph|vdivsh|vdpbf16ps|verr|verw|vexpandpd|vexpandps|vextractf128|vextractf32x4|vextractf32x8|vextractf64x2|vextractf64x4|vextracti128|vextracti32x4|vextracti32x8|vextracti64x2|vextracti64x4|vfcmaddcph|vfcmaddcsh|vfcmulcph|vfcmulcsh|vfixupimmpd|vfixupimmps|vfixupimmsd|vfixupimmss|vfmadd132pd|vfmadd132ph|vfmadd132ps|vfmadd132sd|vfmadd132sh|vfmadd132ss|vfmadd213pd|vfmadd213ph|vfmadd213ps|vfmadd213sd|vfmadd213sh|vfmadd213ss|vfmadd231pd|vfmadd231ph|vfmadd231ps|vfmadd231sd|vfmadd231sh|vfmadd231ss|vfmaddcph|vfmaddcsh|vfmaddsub132pd|vfmaddsub132ph|vfmaddsub132ps|vfmaddsub213pd|vfmaddsub213ph|vfmaddsub213ps|vfmaddsub231pd|vfmaddsub231ph|vfmaddsub231ps|vfmsub132pd|vfmsub132ph|vfmsub132ps|vfmsub132sd|vfmsub132sh|vfmsub132ss|vfmsub213pd|vfmsub213ph|vfmsub213ps|vfmsub213sd|vfmsub213sh|vfmsub213ss|vfmsub231pd|vfmsub231ph|vfmsub231ps|vfmsub231sd|vfmsub231sh|vfmsub231ss|vfmsubadd132pd|vfmsubadd132ph|vfmsubadd132ps|vfmsubadd213pd|vfmsubadd213ph|vfmsubadd213ps|vfmsubadd231pd|vfmsubadd231ph|vfmsubadd231ps|vfmulcph|vfmulcsh|vfnmadd132pd|vfnmadd132ph|vfnmadd132ps|vfnmadd132sd|vfnmadd132sh|vfnmadd132ss|vfnmadd213pd|vfnmadd213ph|vfnmadd213ps|vfnmadd213sd|vfnmadd213sh|vfnmadd213ss|vfnmadd231pd|vfnmadd231ph|vfnmadd231ps|vfnmadd231sd|vfnmadd231sh|vfnmadd231ss|vfnmsub132pd|vfnmsub132ph|vfnmsub132ps|vfnmsub132sd|vfnmsub132sh|vfnmsub132ss|vfnmsub213pd|vfnmsub213ph|vfnmsub213ps|vfnmsub213sd|vfnmsub213sh|vfnmsub213ss|vfnmsub231pd|vfnmsub231ph|vfnmsub231ps|vfnmsub231sd|vfnmsub231sh|vfnmsub231ss|vfpclasspd|vfpclassph|vfpclassps|vfpclasssd|vfpclasssh|vfpclassss|vgatherdpd|vgatherdps|vgatherqpd|vgatherqps|vgetexppd|vgetexpph|vgetexpps|vgetexpsd|vgetexpsh|vgetexpss|vgetmantpd|vgetmantph|vgetmantps|vgetmantsd|vgetmantsh|vgetmantss|vinsertf128|vinsertf32x4|vinsertf32x8|vinsertf64x2|vinsertf64x4|vinserti128|vinserti32x4|vinserti32x8|vinserti64x2|vinserti64x4|vmaskmov|vmaxph|vmaxsh|vminph|vminsh|vmovdqa32|vmovdqa64|vmovdqu16|vmovdqu32|vmovdqu64|vmovdqu8|vmovsh|vmovw|vmulph|vmulsh|vp2intersectd|vp2intersectq|vpblendd|vpblendmb|vpblendmd|vpblendmq|vpblendmw|vpbroadcast|vpbroadcastb|vpbroadcastd|vpbroadcastm|vpbroadcastq|vpbroadcastw|vpcmpb|vpcmpd|vpcmpq|vpcmpub|vpcmpud|vpcmpuq|vpcmpuw|vpcmpw|vpcompressb|vpcompressd|vpcompressq|vpconflictd|vpconflictq|vpdpbusd|vpdpbusds|vpdpwssd|vpdpwssds|vperm2f128|vperm2i128|vpermb|vpermd|vpermi2b|vpermi2d|vpermi2pd|vpermi2ps|vpermi2q|vpermi2w|vpermilpd|vpermilps|vpermpd|vpermps|vpermq|vpermt2b|vpermt2d|vpermt2pd|vpermt2ps|vpermt2q|vpermt2w|vpermw|vpexpandb|vpexpandd|vpexpandq|vpexpandw|vpgatherdd|vpgatherdq|vpgatherqd|vpgatherqq|vplzcntd|vplzcntq|vpmadd52huq|vpmadd52luq|vpmaskmov|vpmovb2m|vpmovd2m|vpmovdb|vpmovdw|vpmovm2b|vpmovm2d|vpmovm2q|vpmovm2w|vpmovq2m|vpmovqb|vpmovqd|vpmovqw|vpmovsdb|vpmovsdw|vpmovsqb|vpmovsqd|vpmovsqw|vpmovswb|vpmovusdb|vpmovusdw|vpmovusqb|vpmovusqd|vpmovusqw|vpmovuswb|vpmovw2m|vpmovwb|vpmultishiftqb|vpopcnt|vprold|vprolq|vprolvd|vprolvq|vprord|vprorq|vprorvd|vprorvq|vpscatterdd|vpscatterdq|vpscatterqd|vpscatterqq|vpshld|vpshldv|vpshrd|vpshrdv|vpshufbitqmb|vpsllvd|vpsllvq|vpsllvw|vpsravd|vpsravq|vpsravw|vpsrlvd|vpsrlvq|vpsrlvw|vpternlogd|vpternlogq|vptestmb|vptestmd|vptestmq|vptestmw|vptestnmb|vptestnmd|vptestnmq|vptestnmw|vrangepd|vrangeps|vrangesd|vrangess|vrcp14pd|vrcp14ps|vrcp14sd|vrcp14ss|vrcpph|vrcpsh|vreducepd|vreduceph|vreduceps|vreducesd|vreducesh|vreducess|vrndscalepd|vrndscaleph|vrndscaleps|vrndscalesd|vrndscalesh|vrndscaless|vrsqrt14pd|vrsqrt14ps|vrsqrt14sd|vrsqrt14ss|vrsqrtph|vrsqrtsh|vscalefpd|vscalefph|vscalefps|vscalefsd|vscalefsh|vscalefss|vscatterdpd|vscatterdps|vscatterqpd|vscatterqps|vshuff32x4|vshuff64x2|vshufi32x4|vshufi64x2|vsqrtph|vsqrtsh|vsubph|vsubsh|vtestpd|vtestps|vucomish|vzeroall|vzeroupper|wait|wbinvd|wbnoinvd|wrfsbase|wrgsbase|wrmsr|wrpkru|wrssd|wrssq|wrussd|wrussq|xabort|xacquire|xadd|xbegin|xchg|xend|xgetbv|xlat|xlatb|xor|xorpd|xorps|xrelease|xresldtrk|xrstor|xrstors|xsave|xsavec|xsaveopt|xsaves|xsetbv|xsusldtrk|xtest|encls|enclu|enclv|getsec|invept|invvpid|vmcall|vmclear|vmfunc|vmlaunch|vmptrld|vmptrst|vmread|vmresume|vmwrite|vmxoff|vmxon|prefetchwt1|v4fmaddps|v4fmaddss|v4fnmaddps|v4fnmaddss|vexp2pd|vexp2ps|vgatherpf0dpd|vgatherpf0dps|vgatherpf0qpd|vgatherpf0qps|vgatherpf1dpd|vgatherpf1dps|vgatherpf1qpd|vgatherpf1qps|vp4dpwssd|vp4dpwssds|vrcp28pd|vrcp28ps|vrcp28sd|vrcp28ss|vrsqrt28pd|vrsqrt28ps|vrsqrt28sd|vrsqrt28ss|vscatterpf0dpd|vscatterpf0dps|vscatterpf0qpd|vscatterpf0qps|vscatterpf1dpd|vscatterpf1dps|vscatterpf1qpd|vscatterpf1qps)(?-i)\\b"
                },
                {
                    "name": "comment.line.semicolon",
                    "match": ";.*"
                },
                {
                    "name": "variable.label",
                    "match": "^\\s*[\\w\\.\\$#@~\\?]+:"
                },
                {
                    "name": "keyword.control.directive",
                    "patterns": [
                        {
                            "name": "storage.modifier.visibility",
                            "match": "\\b(?i)(global|extern|common|static)(?-i)\\b"
                        },
                        {
                            "name": "keyword.control.directive.bits",
                            "match": "\\b(?i)((bits)(\\s+(16|32|64))?|(use)(16|32))(?-i)\\b"
                        },
                        {
                            "name": "keyword.control.directive.default",
                            "match": "\\b(?i)(default)(\\s+(rel|abs|nobnd|bnd))?(?-i)\\b"
                        },
                        {
                            "name": "keyword.control.directive.section",
                            "match": "\\b(?i)(section|segment)(?-i)\\b"
                        },
                        {
                            "name": "keyword.control.directive.absolute",
                            "match": "\\b(?i)(absolute)(?-i)\\b"
                        },
                        {
                            "name": "keyword.control.directive.prefix",
                            "match": "\\b(?i)((g|l)?(pre|post)fix)(?-i)\\b"
                        },
                        {
                            "name": "keyword.control.directive.cpu",
                            "match": "\\b(?i)(cpu)(\\s+\\w+)?(?-i)\\b"
                        },
                        {
                            "name": "keyword.control.directive.float",
                            "match": "\\b(?i)(float)(\\s+(((no)?daz|near|down|up|zero|default)))?(?-i)\\b"
                        },
                        {
                            "name": "keyword.control.directive.primitive",
                            "match": "\\b(?i)(warning)(?-i)\\b"
                        }
                    ]
                },
                {
                    "begin": "([\\w\\.\\$#@~\\?]+)\\(",
                    "beginCaptures": {
                        "1": {
                            "name": "variable.macro"
                        }
                    },
                    "end": "\\)",
                    "patterns": [
                        {
                            "include": "#expressions"
                        }
                    ]
                },
                {
                    "name": "keyword.other.preprocessor",
                    "match": "^\\s*%(?:define|macro)\\s+([\\w\\.\\$#@~\\?]+)(?-i)\\s*",
                    "captures": {
                        "1": {
                            "name": "variable.macro"
                        }
                    }
                },
                {
                    "name": "keyword.other.preprocessor",
                    "match": "^\\s*%\\w+\\b"
                },
                {
                    "name": "keyword.control.psuedoInstruction",
                    "match": "\\b(?i)(uppercase|import|export|(d|res)[bwdqtoyz]|times|group|near|weak|far|org|equ)(?-i)\\b"
                },
                {
                    "name": "keyword.operator",
                    "match": "(==?|!=|<=?>|<=?|>=?|\\|\\|?|\\^\\^?|&&?|<<<?|>>>?|~|!|\\+|-|\\*|//?|%%?)|\\b(?i)(seg|wrt)(?-i)\\b"
                }
            ]
        },
        "expressions": {
            "patterns": [
                {
                    "name": "variable.language.x86",
                    "comment": "x86_64 register name",
                    "match": "\\b(?i)((r(8|9|1[0-5])[d|w|b]?|(ah|al|bh|cl|ch|cs|dl|dh|ds|es|fs|gs|ss|bl|sil|dil|spl|bpl)|(r|e|)(ax|cx|dx|bx|si|di|sp|bp|ip|flags)))(?-i)\\b"
                },
                {
                    "name": "variable.language.avx",
                    "comment": "AVX register name",
                    "match": "\\b(?i)([x|y|z]mm([0-9]|[1-2][0-9]|3[0-1]))(?-i)\\b"
                },
                {
                    "name": "variable.language.nasm",
                    "comment": "built-in variables",
                    "match": "(?<=[^\\w\\$]|^)(\\$\\$?)(?=\\W|$)"
                },
                {
                    "name": "keyword.operator.size",
                    "match": "\\b(?i)(byte|word|dword|qword|tword|oword|yword|zword)(?-i)\\b"
                },
                {
                    "name": "string.quoted",
                    "patterns": [
                        {
                            "name": "string.quoted.double",
                            "begin": "\"",
                            "end": "\""
                        },
                        {
                            "name": "string.quoted.single",
                            "begin": "'",
                            "end": "'"
                        },
                        {
                            "name": "string.quoted.other.backtick",
                            "begin": "`",
                            "end": "`",
                            "patterns": [
                                {
                                    "name": "constant.character.escape",
                                    "match": "\\\\('|\"|`|\\\\|\\?|[abtnvfre]|[0-7]{3}|x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|U[\\da-fA-F]{8})"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "constant.numeric",
                    "match": "(?<=\\W|^)[+-]?(0[dD]\\d[\\d_]*|0[hxHX][\\da-fA-F][\\da-fA-F_]*|0[oqOQ][0-7][0-7_]*|[10][10_]*[byBY]|0[byBY][10][10_]*|[\\da-fA-F][\\da-fA-F_]*[hH]|\\$0[\\da-fA-F][\\da-fA-F_]*|[0-7][0-7_]*[qoQO]|\\d[\\d_]*[dD]?)"
                }
            ]
        }
    },
    "scopeName": "source.nasm"
}
